/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.form;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;
import services.server.ServiceCalcuteRangList;
import thread.ServerThread;

/**
 *
 * @author veljko
 */
public class FrmMain extends javax.swing.JFrame {

    /**
     * Creates new form FrmMain
     */
    private ServerThread serverThread;
    private Logger logger = Logger.getLogger(FrmMain.class);

    public FrmMain() {
        initComponents();
        initListeners();
        jMenuItemStop.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuServer = new javax.swing.JMenu();
        jMenuItemStart = new javax.swing.JMenuItem();
        jMenuItemStop = new javax.swing.JMenuItem();
        JMenuConfiguartion = new javax.swing.JMenu();
        jMenuItemDatabaseConfiguartion = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemCalculate = new javax.swing.JMenuItem();
        JMenuUsers = new javax.swing.JMenu();
        jMenuItemAllUsers = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenuServer.setText("Server");

        jMenuItemStart.setText("Start");
        jMenuServer.add(jMenuItemStart);

        jMenuItemStop.setText("Stop");
        jMenuServer.add(jMenuItemStop);

        jMenuBar1.add(jMenuServer);

        JMenuConfiguartion.setText("Configuration");

        jMenuItemDatabaseConfiguartion.setText("Database");
        JMenuConfiguartion.add(jMenuItemDatabaseConfiguartion);

        jMenuBar1.add(JMenuConfiguartion);

        jMenu1.setText("Rang List");

        jMenuItemCalculate.setText("Calculate");
        jMenu1.add(jMenuItemCalculate);

        jMenuBar1.add(jMenu1);

        JMenuUsers.setText("Users");

        jMenuItemAllUsers.setText("All users");
        JMenuUsers.add(jMenuItemAllUsers);

        jMenuBar1.add(JMenuUsers);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JMenuConfiguartion;
    private javax.swing.JMenu JMenuUsers;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAllUsers;
    private javax.swing.JMenuItem jMenuItemCalculate;
    private javax.swing.JMenuItem jMenuItemDatabaseConfiguartion;
    private javax.swing.JMenuItem jMenuItemStart;
    private javax.swing.JMenuItem jMenuItemStop;
    private javax.swing.JMenu jMenuServer;
    // End of variables declaration//GEN-END:variables

    private void initListeners() {
        jMenuItemStart.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (serverThread == null || !serverThread.isAlive()) {
                    serverThread = new ServerThread();
                    serverThread.start();

                    jMenuItemStart.setEnabled(false);
                    jMenuItemStop.setEnabled(true);
                }
            }
        });

        jMenuItemStop.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (serverThread.getServerSocket() != null && !serverThread.getServerSocket().isClosed()) {
                    try {
                        serverThread.getServerSocket().close();

                        jMenuItemStart.setEnabled(true);
                        jMenuItemStop.setEnabled(false);
                    } catch (IOException ex) {
                        logger.error(ex.getMessage());
                    }
                }
            }
        });
        
        jMenuItemAllUsers.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new FrmAllUsers().setVisible(true);
            }
        });
        
        jMenuItemDatabaseConfiguartion.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new FrmDatabaseConfiguration().setVisible(true);
            }
        });
        
        jMenuItemCalculate.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    ServiceCalcuteRangList.calculate();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(getFrm(), "Server error. Wrong database parametrs.", "Error", 1);
                }
            }
        });
    }
    
    public FrmMain getFrm() {
        return this;
    }

}
